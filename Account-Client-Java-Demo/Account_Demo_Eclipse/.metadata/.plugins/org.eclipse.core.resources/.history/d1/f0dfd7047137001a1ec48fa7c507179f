package com.huawei.hmssample;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;

import com.huawei.hmssample.R;
import com.huawei.hmf.tasks.OnFailureListener;
import com.huawei.hmf.tasks.OnSuccessListener;
import com.huawei.hmf.tasks.Task;
import com.huawei.hms.common.ApiException;
import com.huawei.hms.support.hwid.HuaweiIdAuthManager;
import com.huawei.hms.support.hwid.request.HuaweiIdAuthParams;
import com.huawei.hms.support.hwid.request.HuaweiIdAuthParamsHelper;
import com.huawei.hms.support.hwid.result.AuthHuaweiId;
import com.huawei.hms.support.hwid.service.HuaweiIdAuthService;
import com.huawei.logger.BaseActivity;
import com.huawei.logger.Log;

/**
 * Demonstration of HuaweiId
 */
public class HuaweiIdActivity extends BaseActivity implements OnClickListener {

    //Log tag
    public static final String TAG = "HuaweiIdActivity";
    private HuaweiIdAuthService mSignInClient;
    private HuaweiIdAuthParams mSignInOptions;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_huaweiid);
        // Button click listeners
        findViewById(R.id.hwid_signin).setOnClickListener(this);
        findViewById(R.id.hwid_signout).setOnClickListener(this);
        findViewById(R.id.hwid_revokeAccess).setOnClickListener(this);
        findViewById(R.id.hwid_silentSignIn).setOnClickListener(this);
        findViewById(R.id.hwid_signin).setOnClickListener(this);
        //sample log Please ignore
        addLogFragment();
        //Initialize the HuaweiIdAuthService object by calling the getClient method of HuaweiIdAuthManager
//        mSignInOptions = new HuaweiIdAuthParamsHelper(HuaweiIdAuthParams.DEFAULT_SIGN_IN).requestIdToken("").build();
//        mSignInClient = HuaweiIdAuthManager.getClient(HuaweiIdActivity.this, mSignInOptions);
        
        HuaweiIdAuthParamsHelper helper = new HuaweiIdAuthParamsHelper(HuaweiIdAuthParams.DEFAULT_AUTH_REQUEST_PARAM);
        mSignInOptions = helper.setIdToken().createParams();
        mSignInClient = HuaweiIdAuthManager.getService(HuaweiIdActivity.this, mSignInOptions);
    }

    @Override
    protected void onStart() {
        super.onStart();
    }

    @Override
    protected void onStop() {
        super.onStop();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
    }

    /**
     * Pull up the authorization interface by getSignInIntent
     */
    private void signIn() {
        startActivityForResult(mSignInClient.getSignInIntent(), Constant.REQUEST_SIGN_IN_LOGIN);
    }


    /**
     * sign Out by signOut
     */
    private void signOut() {
        Task<Void> signOutTask = mSignInClient.signOut();
        signOutTask.addOnSuccessListener(new OnSuccessListener<Void>() {
            @Override
            public void onSuccess(Void aVoid) {
                Log.i(TAG, "signOut Success");
            }
        }).addOnFailureListener(new OnFailureListener() {
            @Override
            public void onFailure(Exception e) {
                Log.i(TAG, "signOut fail");
            }
        });
    }


    /**
     * Delegation of authority by revokeAccess
     */
    private void revokeAccess() {
        mSignInClient.cancelAuthorization().addOnFailureListener(new OnFailureListener() {
            @Override
            public void onFailure(Exception exception) {
                if (exception instanceof ApiException) {
                    int statusCode = ((ApiException) exception).getStatusCode();
                    Log.i(TAG, "revokeAccess fail: " + statusCode);
                }
            }
        }).addOnSuccessListener(new OnSuccessListener<Void>() {
            @Override
            public void onSuccess(Void aVoid) {
                Log.i(TAG, "revokeAccess Success");
            }
        });
    }

    /**
     * Silent SignIn by silentSignIn
     */
    private void silentSignIn() {
        Task<AuthHuaweiId> task = mSignInClient.silentSignIn();
        task.addOnSuccessListener(new OnSuccessListener<AuthHuaweiId>() {
            @Override
            public void onSuccess(AuthHuaweiId signInHuaweiId) {
                Log.i(TAG, "silentSignIn success");
            }
        });
        task.addOnFailureListener(new OnFailureListener() {
            @Override
            public void onFailure(Exception e) {
            	Log.i(TAG, "wujiahuisilentSignIn fail: " + e.getMessage());
                //if Failed use getSignInIntent
                if (e instanceof ApiException) {
                    ApiException apiException = (ApiException) e;
                    int statusCode = ((ApiException) apiException).getStatusCode();
                    Log.i(TAG, "silentSignIn fail: " + statusCode);
                    //sign in fail, try to sign in with getSignInIntent()
//                    signIn();
                }
            }
        });
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.hwid_signin:
                signIn();
                break;
            case R.id.hwid_signout:
                signOut();
                break;
            case R.id.hwid_revokeAccess:
                revokeAccess();
                break;
            case R.id.hwid_silentSignIn:
                silentSignIn();
                break;
            default:
                break;
        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == Constant.REQUEST_SIGN_IN_LOGIN) {
            //login success
            //get user message by getSignedInAccountFromIntent
            Task<AuthHuaweiId> signInHuaweiIdTask = HuaweiIdAuthManager.parseAuthResultFromIntent(data);
            if (signInHuaweiIdTask.isSuccessful()) {
                AuthHuaweiId huaweiAccount = signInHuaweiIdTask.getResult();
                Log.i(TAG, "signIn success " + huaweiAccount.toString());
            } else {
                Log.i(TAG, "signIn failed: " + ((ApiException) signInHuaweiIdTask.getException()).getStatusCode());
            }
        }
    }
}
